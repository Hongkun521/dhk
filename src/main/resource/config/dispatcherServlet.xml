<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--配置springMVC文件，声明controller和其他web相关对象-->
    <context:component-scan base-package="com.dhk.crm.settings.web.controller"/>
    <context:component-scan base-package="com.dhk.crm.workbench.web.controller"/>
    <!--视图-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--1.响应Ajax请求，返回json
       2.解决静态资源访问问题
   -->
    <!--2.静态资源过滤(使用default的Servlet对象处理访问静态资源的请求)-->
    <mvc:default-servlet-handler />
    <mvc:annotation-driven/>
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.dhk.handler.MyIntercepter"/>
        </mvc:interceptor>
    </mvc:interceptors>-->

    <!--声明拦截器： 拦截器可以有0或多个-->
    <mvc:interceptors>
        <!--声明第一个拦截器-->
        <bean class="com.dhk.crm.web.filter.MyInterceptor" />
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!--声明拦截器对象-->
            <bean class="com.dhk.crm.web.filter.MyInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
</beans>